// ============================================================
// √Åguila Inventario Pro - M√≥dulo: auth.js
// Copyright ¬© 2025 Jos√© A. G. Betancourt
// Todos los derechos reservados
//
// Este archivo forma parte del sistema √Åguila Inventario Pro,
// desarrollado para promotores de PepsiCo con funcionalidades
// de gesti√≥n, auditor√≠a y sincronizaci√≥n de inventario.
//
// Queda prohibida la reproducci√≥n, distribuci√≥n o modificaci√≥n
// sin autorizaci√≥n expresa del autor.
// ============================================================

// Iniciar sesi√≥n
async function login(email, password) {
  try {
    await auth.signInWithEmailAndPassword(email, password);
    document.getElementById("auth-setup").style.display = "none";
    document.getElementById("app-container").style.display = "block";
    showToast("Bienvenido de nuevo üëã", "success");
  } catch (error) {
    console.error("Error en login:", error);
    showToast("Error al iniciar sesi√≥n: " + error.message, "error");
  }
}

// Registrar usuario
async function register(data) {
  try {
    const userCredential = await auth.createUserWithEmailAndPassword(data.email, data.password);
    const uid = userCredential.user.uid;

    await db.ref("users/" + uid).set({
      determinante: data.determinante,
      storeName: data.storeName,
      promoterName: data.promoterName,
      email: data.email
    });

    document.getElementById("auth-setup").style.display = "none";
    document.getElementById("app-container").style.display = "block";
    showToast("Registro exitoso ‚úÖ", "success");
  } catch (error) {
    console.error("Error en registro:", error);
    showToast("Error al registrar: " + error.message, "error");
  }
}

// Recuperar contrase√±a
async function recoverPassword(email) {
  try {
    await auth.sendPasswordResetEmail(email);
    showToast("Se envi√≥ un enlace de recuperaci√≥n a tu correo üìß", "success");
    switchForm("login-form");
  } catch (error) {
    console.error("Error en recuperaci√≥n:", error);
    showToast("Error al recuperar contrase√±a: " + error.message, "error");
  }
}

// Cerrar sesi√≥n
async function logout() {
  try {
    await auth.signOut();
    document.getElementById("app-container").style.display = "none";
    document.getElementById("auth-setup").style.display = "block";
    switchForm("login-form");
    showToast("Sesi√≥n cerrada correctamente üëã", "success");
  } catch (error) {
    console.error("Error al cerrar sesi√≥n:", error);
    showToast("Error al cerrar sesi√≥n: " + error.message, "error");
  }
}